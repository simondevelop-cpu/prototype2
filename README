# Canadian Insights

Canadian Insights is a full-stack prototype focused on fast, privacy-friendly spending insights for Canadians. It includes a Node/Express API with Prisma-ready persistence, a demo-friendly in-memory fallback, and a React dashboard that surfaces cash-flow analytics, transaction review tools, and curated insight modules.

## Monorepo layout

```
apps/
  backend/   # Express + TypeScript API with Prisma schema, CSV ingest, insights engine
  web/       # React + Vite SPA with i18n, charts, and demo UX
```

## Getting started

1. Install dependencies:

   ```bash
   npm install
   ```

2. Configure environment variables:

   ```bash
   cp apps/backend/.env.example apps/backend/.env
   cp apps/web/.env.example apps/web/.env
   ```

   Adjust `DATABASE_URL`, `SESSION_SECRET`, and `VITE_API_URL` as needed. By default the backend runs in in-memory mode (`DISABLE_DB=true`) so you can explore the demo without Postgres. To use Postgres, set `DISABLE_DB=false`, provide a valid `DATABASE_URL`, then run `npm run db:migrate --workspace backend` and `npm run db:seed --workspace backend`.

3. Start the API:

   ```bash
   npm run dev --workspace backend
   ```

4. Start the web app in a separate terminal:

   ```bash
   npm run dev --workspace web
   ```

5. Visit the SPA (default `http://localhost:5173`). Use "Explore demo data" to log into the seeded household, or create a new account via email.

## Backend capabilities

- Type-safe Express routes with Zod validation and shared adapters for Prisma or in-memory storage.
- CSV ingest pipeline with Canadian-aware heuristics (e-transfer detection, merchant keywords) and upload metrics.
- Dashboard summary service computing cash-flow, category breakdowns, budgets, and savings goals.
- Insight modules exposing subscription/bill/fee benchmarks plus feedback capture.
- Settings endpoints for profile updates, canonical category listings, smart-rule placeholders, and account discovery.
- Prisma schema & migration for Postgres deployments, including a seeding script that recreates the demo experience in a real database.

## Frontend capabilities

- Responsive dashboard with cash-flow bar charts, category overviews, and savings highlights (Recharts + Tailwind).
- Transaction workspace with filters, searchable table, and guided CSV upload wizard.
- Insight hub with module cards, contextual metadata chips, and single-click feedback actions.
- Settings screens for profile localisation, account inventory, category browsing, and transparency around insight feedback choices.
- Auth landing flow supporting registration, email sign-in, and one-click demo access. Session tokens are persisted client-side and mirrored via secure cookies.
- i18n scaffolding with English/French copy, easy to extend through `src/i18n.ts`.

## Testing & linting

- API linting: `npm run lint --workspace backend`
- Web linting: `npm run lint --workspace web`
- Type checking/build: `npm run build --workspace backend`, `npm run build --workspace web`

## Demo data

The repository seeds a "Demo Household" (email `demo@canadianinsights.app`) with:

- Canonical Canadian spending hierarchy.
- Everyday chequing account populated with recurring subscriptions (Netflix, Spotify, Telus), utilities, dining, groceries, and payroll deposits.
- Insight modules for subscription hikes, fees, and peer comparisons.

Use the "Explore demo data" CTA on the landing page or call `POST /auth/demo` to obtain an authenticated session instantly.
